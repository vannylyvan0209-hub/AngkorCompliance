name: Setup Branch Protection

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Repository name (owner/repo)'
        required: true
        default: 'vannylyvan0209-hub/AngkorCompliance'
        type: string
      token:
        description: 'GitHub token with admin permissions'
        required: true
        type: string

jobs:
  setup-protection:
    name: Setup Branch Protection
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup main branch protection
      run: |
        curl -X PUT \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ github.event.inputs.token }}" \
          https://api.github.com/repos/${{ github.event.inputs.repository }}/branches/main/protection \
          -d '{
            "required_status_checks": {
              "strict": true,
              "contexts": [
                "frontend",
                "backend", 
                "security",
                "code-quality",
                "test-coverage"
              ]
            },
            "enforce_admins": true,
            "required_pull_request_reviews": {
              "required_approving_review_count": 2,
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": true,
              "dismissal_restrictions": {
                "users": [],
                "teams": []
              }
            },
            "restrictions": {
              "users": [],
              "teams": []
            },
            "allow_force_pushes": false,
            "allow_deletions": false,
            "required_linear_history": true
          }'

    - name: Setup develop branch protection
      run: |
        curl -X PUT \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ github.event.inputs.token }}" \
          https://api.github.com/repos/${{ github.event.inputs.repository }}/branches/develop/protection \
          -d '{
            "required_status_checks": {
              "strict": true,
              "contexts": [
                "frontend",
                "backend",
                "code-quality"
              ]
            },
            "enforce_admins": false,
            "required_pull_request_reviews": {
              "required_approving_review_count": 1,
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": false,
              "dismissal_restrictions": {
                "users": [],
                "teams": []
              }
            },
            "restrictions": {
              "users": [],
              "teams": []
            },
            "allow_force_pushes": false,
            "allow_deletions": false,
            "required_linear_history": false
          }'

    - name: Create staging environment
      run: |
        curl -X PUT \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ github.event.inputs.token }}" \
          https://api.github.com/repos/${{ github.event.inputs.repository }}/environments/staging \
          -d '{
            "wait_timer": 0,
            "prevent_self_review": false,
            "reviewers": []
          }'

    - name: Create production environment
      run: |
        curl -X PUT \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ github.event.inputs.token }}" \
          https://api.github.com/repos/${{ github.event.inputs.repository }}/environments/production \
          -d '{
            "wait_timer": 5,
            "prevent_self_review": true,
            "reviewers": [
              {
                "type": "User",
                "id": "vannylyvan0209-hub"
              }
            ]
          }'

    - name: Setup completed
      run: |
        echo "‚úÖ Branch protection setup completed!"
        echo "üìã Configured branches:"
        echo "  - main: 2 reviewers, all status checks required"
        echo "  - develop: 1 reviewer, core status checks required"
        echo "üåç Configured environments:"
        echo "  - staging: 0 min wait, no self-review prevention"
        echo "  - production: 5 min wait, self-review prevention enabled"
