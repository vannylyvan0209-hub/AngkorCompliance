name: Code Quality & Testing

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  # Code Quality Checks
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd angkor-compliance-v2/frontend && npm ci
        cd ../backend && npm ci

    - name: Run ESLint (Frontend)
      run: |
        cd angkor-compliance-v2/frontend
        npm run lint

    - name: Run ESLint (Backend)
      run: |
        cd angkor-compliance-v2/backend
        npm run lint

    - name: Run Prettier check
      run: |
        cd angkor-compliance-v2/frontend && npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"
        cd ../backend && npx prettier --check "src/**/*.{ts,js,json,md}"

    - name: TypeScript type checking (Frontend)
      run: |
        cd angkor-compliance-v2/frontend
        npm run type-check

    - name: TypeScript type checking (Backend)
      run: |
        cd angkor-compliance-v2/backend
        npm run type-check

  # Test Coverage
  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: angkor_compliance_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install frontend dependencies
      run: |
        cd angkor-compliance-v2/frontend
        npm ci

    - name: Install backend dependencies
      run: |
        cd angkor-compliance-v2/backend
        npm ci

    - name: Setup database
      run: |
        cd angkor-compliance-v2/backend
        npm run db:generate
        npm run db:push
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/angkor_compliance_test

    - name: Run frontend tests with coverage
      run: |
        cd angkor-compliance-v2/frontend
        npm run test:coverage

    - name: Run backend tests with coverage
      run: |
        cd angkor-compliance-v2/backend
        npm run test:coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/angkor_compliance_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret-key
        NODE_ENV: test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./angkor-compliance-v2/frontend/coverage/lcov.info,./angkor-compliance-v2/backend/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # Performance Testing
  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd angkor-compliance-v2/frontend && npm ci
        cd ../backend && npm ci

    - name: Build applications
      run: |
        cd angkor-compliance-v2/frontend && npm run build
        cd ../backend && npm run build

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './angkor-compliance-v2/frontend/.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

  # Accessibility Testing
  accessibility-test:
    name: Accessibility Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd angkor-compliance-v2/frontend && npm ci

    - name: Build frontend
      run: |
        cd angkor-compliance-v2/frontend
        npm run build

    - name: Run accessibility tests
      run: |
        cd angkor-compliance-v2/frontend
        npm run test:a11y
