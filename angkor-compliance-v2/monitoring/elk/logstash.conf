# Logstash configuration for Angkor Compliance Platform
input {
  # Kubernetes logs
  beats {
    port => 5044
  }
  
  # Application logs
  file {
    path => "/var/log/angkor-compliance/*.log"
    type => "application"
    start_position => "beginning"
    codec => "json"
  }
  
  # Database logs
  file {
    path => "/var/log/postgresql/*.log"
    type => "database"
    start_position => "beginning"
  }
  
  # Nginx logs
  file {
    path => "/var/log/nginx/*.log"
    type => "nginx"
    start_position => "beginning"
  }
}

filter {
  # Parse application logs
  if [type] == "application" {
    json {
      source => "message"
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    mutate {
      add_field => { "service" => "angkor-compliance" }
    }
  }
  
  # Parse database logs
  if [type] == "database" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" }
    }
    
    mutate {
      add_field => { "service" => "postgresql" }
    }
  }
  
  # Parse Nginx logs
  if [type] == "nginx" {
    grok {
      match => { "message" => "%{NGINXACCESS}" }
    }
    
    mutate {
      add_field => { "service" => "nginx" }
    }
  }
  
  # Add Kubernetes metadata
  if [kubernetes] {
    mutate {
      add_field => { "namespace" => "%{[kubernetes][namespace]}" }
      add_field => { "pod" => "%{[kubernetes][pod_name]}" }
      add_field => { "container" => "%{[kubernetes][container_name]}" }
    }
  }
}

output {
  # Send to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "angkor-compliance-logs-%{+YYYY.MM.dd}"
    template_name => "angkor-compliance-logs"
    template => "/etc/logstash/templates/angkor-compliance-logs.json"
    template_overwrite => true
  }
  
  # Send to stdout for debugging
  stdout {
    codec => rubydebug
  }
}
